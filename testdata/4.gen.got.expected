// Code generated by gensf. DO NOT EDIT.

package main

import "fmt"

func (value TestStruct) toHtml(prefix string) (out string) {

	// Field : Field

	out += fmt.Sprintf("\n<br><strong>Some field without name of field</strong><br>\n")
	out += fmt.Sprintf(
		"\n<input type=\"text\" name=\"%sField\" value=\"%s\"><br>\n",
		prefix, fmt.Sprintf("%v", value.Field))

	// Field : NestedStruct

	out += fmt.Sprintf("\n<br><strong>NestedStruct with some documentation</strong><br>\n")

	// Field : NestedStruct.NestedItem1

	out += fmt.Sprintf("\n<br><strong>NestedItem1 is first value</strong><br>\n")
	out += fmt.Sprintf(
		"\n<input type=\"text\" name=\"%sNestedStruct.NestedItem1\" value=\"%s\"><br>\n",
		prefix, fmt.Sprintf("%v", value.NestedStruct.NestedItem1))

	// Field : NestedStruct.NestedItem2

	out += fmt.Sprintf("\n<br><strong>NestedItem2 is second value</strong><br>\n")
	out += fmt.Sprintf(
		"\n<input type=\"text\" name=\"%sNestedStruct.NestedItem2\" value=\"%s\"><br>\n",
		prefix, fmt.Sprintf("%v", value.NestedStruct.NestedItem2))

	// Field : NestedStruct.NestedItem3

	out += fmt.Sprintf("\n<br><strong>NestedItem3 in struct</strong><br>\n")
	out += fmt.Sprintf(
		"\n<input type=\"text\" name=\"%sNestedStruct.NestedItem3\" value=\"%s\"><br>\n",
		prefix, fmt.Sprintf("%v", value.NestedStruct.NestedItem3))

	// Field : NestedStruct.NestedItem4

	out += fmt.Sprintf("\n<br><strong>NestedItem4 have many lines of documentation with many clarifications</strong><br>\n")
	out += fmt.Sprintf(
		"\n<input type=\"text\" name=\"%sNestedStruct.NestedItem4\" value=\"%s\"><br>\n",
		prefix, fmt.Sprintf("%v", value.NestedStruct.NestedItem4))

	// Field : NestedStruct.DoubleNested

	out += fmt.Sprintf("\n<br><strong>...</strong><br>\n")

	// Field : NestedStruct.DoubleNested.some_value

	out += fmt.Sprintf("\n<br><strong>very deep field</strong><br>\n")
	out += fmt.Sprintf(
		"\n<input type=\"text\" name=\"%sNestedStruct.DoubleNested.some_value\" value=\"%s\"><br>\n",
		prefix, fmt.Sprintf("%v", value.NestedStruct.DoubleNested.some_value))

	return
}

func (value TestStruct) ToHtml() (out string) {
	return value.toHtml("TestStruct.")
}
